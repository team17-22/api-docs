openapi: 3.0.0
info:
  version: '1.3.0'
  title: 'EVP-api'
  description: 'api documentation for the EVP project'
  
servers:
  - description: 'Dev'
    url: 'http://localhost:8000/api'

paths:
  /project-statuses:
    get:
      summary: "Returns an array of possible project statuses"
      tags:
        - project
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatuses'
  /project-milestone-statuses:
    get:
      summary: "Returns an array of possible milestone statuses"
      tags:
        - project
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MilestoneStatuses'
  /project-home-types:
    get:
      summary: "Returns an array of possible project types for home projects"
      tags:
        - project
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHomeTypes'              
  /project-foreign-types:
    get:
      summary: "Returns an array of possible project types for foreign projects"
      tags:
        - project
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectForeignTypes'
  /project-requests:
    get:
        summary: "Returns an array of possible project requests"
        tags:
          - project
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProjectRequests'
  /output-types:
    get:
        summary: "Returns an array of possible output types"
        tags:
          - outputs
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProjectOutputTypes'
  
  /project:
    post:
      summary: 'Creates new project'
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: 'domestic'
                subtype:
                    type: string
                    example: 'KEGA'
                name_sk:
                  type: string
                  example: 'Názov projektu v slovenčine'
                name_en:
                    type: string
                    example: 'Name of the project in english'
                abstract:
                  type: string
                  example: 'Convolutional neural networks (CNNs) have been applied to various automatic image segmentation tasks in medical image analysis, including brain MRI segmentation...'
                keywords:
                  type: array
                  items:
                    type: string
                    example: "Adversarial networks"
                start_date:
                  type: string
                  example: '2020-12-12'
                end_date:
                  type: string
                  example: '2021-12-12'
                milestones:
                  type: array
                  items: 
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 0
                      name: 
                        type: string
                        example: 'Milnik 1'
                      description:
                        type: string
                        example: 'Nejaky milnik, idk, laldaldaldlal.'
                      date:
                        type: string
                        example: '2021-12-12' 
                outputs:
                  type: array
                  items: 
                    type: object
                    properties:
                      type:
                        type: integer
                        example: 1
                      count:
                        type: integer
                        example: 2
                      milestone_id:
                        type: integer
                        example: 0
                        
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewProject'
        '422':
          description: Unprocessable Entity
        '405':
          description: Method Not Allowed
  /project/{id}:
      get:
        summary: "Returns specified project"
        parameters:
            - in: path
              name: id
              schema:
                type: integer
                example: 1
              required: true
              description: ID of the project
        tags:
          - project
        responses:
          '200':
            description: Ok
            content:
              application/json:        
                schema:
                  $ref: '#/components/schemas/Project'
          '404':
            description: Not Found
  /project/{id}/milestones:
    get:
      summary: "Returns milestones for the specified project"
      tags:
        - project
      parameters:
          - in: path
            name: id
            schema:
              type: integer
              example: 1
            required: true
            description: ID of the project
      responses:
          '200':
            description: Ok
            content:
              application/json:        
                schema:
                  $ref: '#/components/schemas/ProjectMilestones'
          '404':
            description: Not Found
  /project-search:
    get:
      summary: "Returns projects"
      tags:
        - project
      parameters:
         - in: query
           name: page
           schema:
             type: integer
             example: 1
           description: Specify which page to return 
         - in: query
           name: limit
           schema:
             type: integer
             example: 10
           description: The numbers of items returned on each page
         - in: query
           name: title
           schema:
             type: string
             example: 'Nazov'
           description: Title
         - in: query
           name: keyword
           schema:
             type: string
             example: 'keyword1'
           description: Keyword
      responses:
        '200':
          description: OK
          content:
              application/json:        
                schema:
                  $ref: '#/components/schemas/ProjectSearch'
        '422':
          description: Unprocessable Entity
       
  /person/{id}/projects-simple:
    get:
      summary: "Returns projects - simplified endpoint for team 25"
      tags:
        - "team25 endpoints"
      parameters:
          - in: path
            name: id
            schema:
              type: integer
              example: 1
            required: true
            description: ID of the user
          - in: query
            name: page
            schema:
              type: integer
            description: Specify which page to return 
          - in: query
            name: limit
            schema:
              type: integer
            description: The numbers of items returned on each page
      responses:
        '200':
          description: Ok
          content:
              application/json:        
                schema:
                  $ref: '#/components/schemas/SimplifiedProjects'
        '404':
          description: Not Found
       
  /person/{id}/projects:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: The ID of the person
      - in: query
        name: page
        schema:
          type: integer
          example: 1
        description: Specify which page to return 
      - in: query
        name: limit
        schema:
          type: integer
          example: 10
        description: The numbers of items returned on each page
    get:
      summary: "Returns projects of a person specified by ID"
      tags:
        - person
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        subtype:
                          type: string
                        start_date:
                          type: string
                          format: date
                        end_date:
                          type: string
                          format: date
                        status:
                          type: string
                        name_sk:
                          type: string
                        name_en:
                          type: string
                        is_draft:
                          type: boolean
                        person_roles:
                          type: string
                        person_roles_sk:
                          type: string
                  info:
                    type: object
                    properties:
                      number_of_results:
                        type: integer
                      number_of_displayed:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
              example:
                data:
                  - id: 1
                    type: "domestic"
                    subtype: "KEGA"
                    start_date: "2020-06-12"
                    end_date: "2023-06-15"
                    status: "Pred schválením"
                    name_sk: "slovensky nazov"
                    name_en: "english title"
                    is_draft: false
                    person_roles: "Administrator"
                    person_roles_sk: "Hlavný riešiteľ"
                  - id: 2
                    type: "domestic"
                    subtype: "KEGA"
                    start_date: "2020-07-13"
                    end_date: "2023-03-17"
                    status: "Pred schválením"
                    name_sk: "slovensky nazov 2"
                    name_en: "english title 2"
                    is_draft: false
                    person_roles: "Administrator"
                    person_roles_sk: "Hlavný riešiteľ"
                info:
                  number_of_results: 2
                  number_of_displayed: 2
                  current_page: 1
                  total_pages: 1
        '404':
          description: Not found
  
  /person/{id}/invitations:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: The ID of the person
      - in: query
        name: page
        schema:
          type: integer
          example: 1
        description: Specify which page to return 
      - in: query
        name: limit
        schema:
          type: integer
          example: 10
        description: The numbers of items returned on each page
    get:
      summary: "Returns invitations for a person specified by ID"
      tags:
        - person
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        project_id:
                          type: integer
                        name_sk:
                          type: string
                        subtype:
                          type: string
                        sender_id:
                          type: integer
                        role:
                          type: string
                  info:
                    type: object
                    properties:
                      number_of_results:
                        type: integer
                      number_of_displayed:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
              example:
                data:
                  - id: 1
                    project_id: 4
                    name_sk: "dalsi projekt"
                    subtype: "Grantový systém"
                    sender_id: 2
                    role: "Výskumník"
                info:
                  number_of_results: 1
                  number_of_displayed: 1
                  current_page: 1
                  total_pages: 1
        '404':
          description: Not Found

  /person/{id}/drafts:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: The ID of the person
      - in: query
        name: page
        schema:
          type: integer
          example: 1
        description: Specify which page to return 
      - in: query
        name: limit
        schema:
          type: integer
          example: 10
        description: The numbers of items returned on each page
    get:
      summary: "Returns drafts of a person specified by ID"
      tags:
        - person
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        subtype:
                          type: string
                        start_date:
                          type: string
                          format: date
                        end_date:
                          type: string
                          format: date
                        status:
                          type: string
                        name_sk:
                          type: string
                        name_en:
                          type: string
                        is_draft:
                          type: boolean
                        person_roles:
                          type: string
                        person_roles_sk:
                          type: string
                  info:
                    type: object
                    properties:
                      number_of_results:
                        type: integer
                      number_of_displayed:
                        type: integer
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
              example:
                data:
                  - id: 3
                    type: "domestic"
                    subtype: "APPV"
                    start_date: "2020-06-12"
                    end_date: "2023-06-15"
                    status: "Pred schválením"
                    name_sk: "draft projekt"
                    name_en: ""
                    is_draft: true
                    person_roles: "Administrator"
                    person_roles_sk: "Hlavný riešiteľ"
                info:
                  number_of_results: 1
                  number_of_displayed: 1
                  current_page: 1
                  total_pages: 1
        '404':
          description: Not Found

  /project-person-relations:
    post:
      summary: "Creates a connection between existing project and person"
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cfProjId:
                  type: integer
                cfPersId:
                  type: integer
                cfClassId:
                  type: string
              required:
                - cfProjId
                - cfPersId
                - cfClassId
            example:
              cfProjId: 2
              cfPersId: 1
              cfClassId: "94fefd50-1d00-11e1-8bc2-0800200c9a66_b9bd41f0-1cfc-11e1-8bc2-0800200c9a66"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              example:
                id: 1
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: Duplicate assignment of person to project

  /project-invitations:
    post:
      summary: "Creates new invitation to a project"
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                recipient_id:
                  type: integer
                sender_id:
                  type: integer
                role_id:
                  type: string
              required:
                - project_id
                - recipient_id
                - sender_id
                - role_id
            example:
              project_id: 1
              recipient_id: 2
              sender_id: 1
              role_id: "94fefd50-1d00-11e1-8bc2-0800200c9a66_b9bd41f0-1cfc-11e1-8bc2-0800200c9a66"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              example:
                id: 1
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
  
  /organisation:
    get:
      summary: "Returns a list of organisations"
      tags:
        - organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        acronym:
                          type: string
                        ico:
                          type: string
                        email:
                          type: string
                        phone_number:
                          type: string
                        website:
                          type: string
                        type_en:
                          type: string
                        type_sk:
                          type: string
              example:
                data:
                  - id: 1
                    name: "name"
                    acronym: "acronym"
                    ico: "ico"
                    email: "email"
                    phone_number: "phone_number"
                    website: "website"
                    type_en: "Academic Institute"
                    type_sk: "Akademický inštitút"
    post:
      summary: "Creates an organisation"
      tags:
        - organisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                acronym:
                  type: string
                research_activity:
                  type: string
                ico:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
                website:
                  type: string
                cfClassId:
                  type: string
              required:
                - name
                - cfClassId
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
        '405':
          description: Method Not Allowed

  /organisation/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: The ID of the organisation to be returned

    get:
      summary: "Returns an organisation specified by ID"
      tags:
        - organisation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  acronym:
                    type: string
                  ico:
                    type: string
                  email:
                    type: string
                  phone_number:
                    type: string
                  website:
                    type: string
                  type_en:
                    type: string
                  type_sk:
                    type: string
              example:
                id: 1
                name: "name"
                acronym: "acronym"
                ico: "ico"
                email: "email2"
                phone_number: "phone_number"
                website: "website"
                type_en: "Academic Institute"
                type_sk: "Akademický inštitút"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Organization with given ID does not exist."

  /organisation/{id}/review-process/{type}:        
    get:
      summary: "Returns a review process structure for specified type in an organisation specified by ID"
      tags:
        - organisation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          example: 1
        required: true
        description: The ID of the organization
      - in: path
        name: type
        schema:
          type: string
          example: "project"
        required: true
        description: The type of review process
        enum:
          - project
          - patent
          - publication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tree:
                    type: object
                    properties:
                      process_id:
                        type: integer
                      process_name:
                        type: string
                      responsible_person:
                        type: integer
                        nullable: true
                      prev_reviewers:
                        type: array
                        items:
                          type: integer
                      child_processes:
                        type: array
                        items:
                          type: object
                          properties:
                            process_id:
                              type: integer
                            process_name:
                              type: string
                            responsible_person:
                              type: integer
                              nullable: true
                            prev_reviewers:
                              type: array
                              items:
                                type: integer
                            child_processes:
                              type: array
                              items:
                                type: object
                                properties:
                                  process_id:
                                    type: integer
                                  process_name:
                                    type: string
                                  responsible_person:
                                    type: integer
                                    nullable: true
                                  prev_reviewers:
                                    type: array
                                    items:
                                      type: integer
                                  child_processes:
                                    type: array
                                    items: []
              example:
                tree:
                  process_id: 1
                  process_name: "Review process 1"
                  responsible_person: null
                  prev_reviewers:
                    - 4
                    - 5
                  child_processes:
                    - process_id: 2
                      process_name: "Review process 2"
                      responsible_person: 9
                      prev_reviewers:
                        - 1
                        - 2
                        - 3
                        - 6
                        - 7
                        - 8
                      child_processes:
                        - process_id: 3
                          process_name: "Review process 3"
                          responsible_person: 4
                          prev_reviewers: []
                          child_processes: []
                        - process_id: 4
                          process_name: "Review process 4"
                          responsible_person: 5
                          prev_reviewers: []
                          child_processes: []
        '404':
          description: Not Found

  /classes/{context}:
    get:
      summary: "Returns classes for specified context"
      parameters:
        - in: path
          name: context
          schema:
            type: string
            example: proj-pers
          required: true
          description: The context of classes to be returned
          enum:
            - proj-pers
            - org-class
      tags:
        - class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        cfTerm:
                          type: string
                        cfTerm_sk:
                          type: string
              examples:
                proj-pers:
                  value:
                    data:
                      - id: "94fefd50-1d00-11e1-8bc2-0800200c9a66_b9bd41f0-1cfc-11e1-8bc2-0800200c9a66"
                        cfTerm: "Administrator"
                        cfTerm_sk: "Hlavný riešiteľ"
                      - id: "94fefd50-1d00-11e1-8bc2-0800200c9a66_ebd55ab0-1cfc-11e1-8bc2-0800200c9a66"
                        cfTerm: "Researcher"
                        cfTerm_sk: "Výskumník"
                      - id: "94fefd50-1d00-11e1-8bc2-0800200c9a66_ddc3dd10-1cfd-11e1-8bc2-0800200c9a66"
                        cfTerm: "Participant"
                        cfTerm_sk: "Riešiteľ"
                org-class:
                  value:
                    data:
                      - id: "759af939-34ae-11e1-b86c-0800200c9a66_eda2b2ec-34c5-11e1-b86c-0800200c9a66"
                        cfTerm: "Academic Institute"
                        cfTerm_sk: "Akademický inštitút"
                      - id: "759af939-34ae-11e1-b86c-0800200c9a66_eda2b2ed-34c5-11e1-b86c-0800200c9a66"
                        cfTerm: "University"
                        cfTerm_sk: "Univerzita"
                      - id: "759af939-34ae-11e1-b86c-0800200c9a66_eda2b2ee-34c5-11e1-b86c-0800200c9a66"
                        cfTerm: "University College"
                        cfTerm_sk: "Univerzitná vysoká škola"
                      - id: "759af939-34ae-11e1-b86c-0800200c9a66_eda2b2ef-34c5-11e1-b86c-0800200c9a66"
                        cfTerm: "Research Institute"
                        cfTerm_sk: "Výskumný ústav"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Specified context was not found. Available contexts are: ['proj-pers', 'org-class']"

components:
  schemas:
    ProjectStatuses:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 2
              status:
                type: string
                example: 'Pred schválením'

    MilestoneStatuses:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              status:
                type: string
                example: 'Plánovaný'
    
    ProjectHomeTypes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              status:
                type: string
                example: 'Grantový systém'
      
    ProjectForeignTypes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              status:
                type: string
                example: 'Negrantové zmluvy'

    ProjectRequests:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              status:
                type: string
                example: 'Výzva 1'

    ProjectOutputTypes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              status:
                type: string
                example: 'Patent'
                
    NewProject:
      type: object
      properties:
        id: 
          type: integer
          example: 2132134
    
    ProjectMilestones:
      type: object
      properties:
        start_date:
          type: string
          format: date
          example: "2020-06-12"
        end_date:
          type: string
          format: date
          example: "2023-06-15"
        title:
          type: object
          properties:
            sk:
              type: string
              example: "slovensky nazov"
            en:
              type: string
              example: "english title"
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              date:
                type: string
                format: date
                example: "2020-09-07"
              name:
                type: string
                example: "Milnik 1"
              description:
                type: string
                example: "Opis milniku 1."
              status:
                type: integer
                example: 1

    SimplifiedProjects:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              title:
                type: string
                example: "slovensky nazov"
        info:
          type: object
          properties:
            number_of_results:
              type: integer
              example: 10
            number_of_returned:
              type: integer
              example: 1
            current_page:
              type: integer
              example: 2
            total_pages:
              type: integer
              example: 10
              
    Project:
      type: object
      properties:
        id:
          type: integer
          example: 1
        start_date:
          type: string
          format: date
          example: "2020-06-12"
        end_date:
          type: string
          format: date
          example: "2023-06-15"
        general_info:
          type: object
          properties:
            status:
              type: string
              example: "Pred schválením"
            type:
              type: string
              example: "KEGA"
        title:
          type: object
          properties:
            sk:
              type: string
              example: "slovensky nazov"
            en:
              type: string
              example: "english title"
        description:
          type: string
          example: "description lalal"
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              date:
                type: string
                format: date
                example: "2020-09-07"
              name:
                type: string
                example: "Milnik 1"
              description:
                type: string
                example: "Opis milniku 1."
              status:
                type: integer
                example: 1
        keywords:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              keyword:
                type: string
                example: "Keyword 1"
        expected_results:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                  example: 'Patent'
                total:
                  type: integer
                  example: 3
                concluded:
                  type: integer
                  example: 0
        participants:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              first_name:
                type: string
                example: "First"
              last_name:
                type: string
                example: "Last"
              contact:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    example: "lalal@mail.com"
                  phone_number:
                    type: string
                    example: "031236271"
                    
    ProjectSearch:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              title_sk:
                type: string
                example: "slovensky nazov"
              title_en:
                type: string
                example: "english title"
              type:
                type: string
                example: "KEGA"
              start_date:
                type: string
                format: date
                example: "2020-06-12"
              end_date:
                type: string
                format: date
                example:  "2023-06-15"
              status:
                type: string
                example: "Pred schválením"
        info:
          type: object
          properties:
            number_of_results:
              type: integer
              example: 1
            number_of_displayed:
              type: integer
              example: 1
            current_page:
              type: integer
              example: 1
            total_pages:
              type: integer
              example: 1